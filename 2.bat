::сохранять файл только в кодировке 866 чтобы работал вывод текста на русском! (https://i.imgur.com/r1BdfjH.png)

::отключить режим отображения вводимых команд на экране
@echo off


::включить отложенное расширение переменной среды
::(включить изменение переменных внутри циклов for)
setlocal EnableDelayedExpansion


::попросить пользователя ввести режим работы программы ("mid" - сред. арифметическое или "cpy" - копирование файлов)
::и записать результат в переменную func
set /p func=Среднее арифметическое/копировать файлы? [mid/cpy]
::попросить пользователя ввести 2 директории и записать директории в переменные directory1 и directory2
set /p directory1=Введите директорию 1.
set /p directory2=Введите директорию 2.


::если пользователь ввел "mid" перейти к ярлыку "middle"
if [%func%]==[mid] goto middle
::если пользователь ввел "cpy" перейти к ярлыку "copyfiles"
if [%func%]==[cpy] goto copyfiles
::(ярлык - место в файле, названное и помеченное двоеточием, в которое можно перейти из любого места в файле с помощью команды "goto *имя ярлыка*")



::~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
::вычислить среднее арифметическое количества файлов в двух директориях
:middle
::1)вычисляем количество файлов в директории directory1:
::задаем переменную dir1 и устанавливаем ей значение 0
set dir1=0
::для каждого файла в директории directory1 прибавляем к dir1 число 1
::таким образом количество файлов в директории directory1 запишется в переменную dir1
::(ключ "/a" означает, что нужно математически посчитать числовое выражение перед записью в переменную)
for %%i in (%directory1%\*) do set /a dir1=!dir1!+1


::2)по аналогии вычисляем количество файлов в директории directory2:
set dir2=0
for %%i in (%directory2%\*) do set /a dir2=!dir2!+1


::3)записываем в переменную result среднее арифметическое двух полученных чисел:
set /a result=(dir1+dir2)/2
::(ключ "/a" означает, что нужно математически посчитать числовое выражение перед записью в переменную)


::4)выводим полученное значение:
echo !result!


::5)очищаем использованные в данной функции переменные среды чтобы не оставлять на компьютере мусора:
set dir1=
set dir2=
set result=


::6)переходим к ярлыку "eof" чтобы не сработала другая функция файла:
goto eof



::~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
::скопировать файлы с цифрами из директории directory1 в директорию directory2 и удалить файлы содержащие "select"
:copyfiles
::1)копируем каждый файл в директории directory1, содержащий цифры, в директорию directory2:
for /f %%i in ('findstr /m [0-9] %directory1%\*') do copy %%i %directory2%
::(ключ "/f" означает, что нужно использовать результаты выполнения команды в круглых скобках в качестве элементов цикла for)
::findstr /m [0-9] %directory1%\* - вернуть названия всех файлов, содержащих цифры в директории directory1
::(ключ "/m" - возвращать только названия файлов без их содержимого)


::2)удаляем каждый файл, содержащий строку "select" в директории directory1:
for /f %%i in ('findstr /l /m "select" %directory1%\*') do del %%i
::(ключ "/f" означает, что нужно использовать результаты выполнения команды в круглых скобках в качестве элементов цикла for)
::findstr /l /m "select" %directory2%\* - вернуть названия всех файлов, содержащих строку "select" в директории directory2
::(ключ "/m" - возвращать только названия файлов без их содержимого)
::(ключ "/l" - искать файлы по строке, а не по регулярному выражению)



::~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
::ярлык "eof" служит для того, чтобы выполнить только ту функцию, которую запросил пользователь и не выполнять остальные
:eof
::очищаем остальные использованные переменные среды чтобы не оставлять на компьютере мусора
set func=
set directory1=
set directory2=
